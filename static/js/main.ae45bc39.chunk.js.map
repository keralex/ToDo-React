{"version":3,"sources":["components/TodoForm.js","components/Todo.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["TodoForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","responsible","description","priority","handleInput","bind","assertThisInitialized","handleSubmit","event","_event$target","target","value","name","setState","defineProperty","preventDefault","props","onAddToDo","react_default","a","createElement","className","onSubmit","type","onChange","placeholder","Component","Todo","index","handleRemove","e","onRemove","todo","onClick","App","todos","handleAddToDo","listToDo","concat","filter","i","_this2","map","Todo_Todo","key","href","length","src","logo","alt","components_TodoForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ae45bc39.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass TodoForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: '',\r\n            responsible: '',\r\n            description: '',\r\n            priority: 'low'\r\n        };\r\n        this.handleInput=this.handleInput.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n\r\n    }\r\n    handleInput(event) {\r\n        const { value, name } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        this.props.onAddToDo(this.state);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <form className=\"card-body\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" name=\"title\"\r\n                            onChange={this.handleInput}\r\n                            className=\"form-control\"\r\n                            placeholder=\"title\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" name=\"responsible\"\r\n                            onChange={this.handleInput}\r\n                            className=\"form-control\"\r\n                            placeholder=\"responsible\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" name=\"description\"\r\n                            onChange={this.handleInput}\r\n                            className=\"form-control\"\r\n                            placeholder=\"description\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select name=\"priority\"\r\n                            onChange={this.handleInput}\r\n                            className=\"form-control\"\r\n                            placeholder=\"priority\" >\r\n                            <option>low</option>\r\n                            <option>medium</option>\r\n                            <option>high</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Save\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoForm;","import React, {Component} from 'react'\r\n\r\nexport default class Todo extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            index: null\r\n        }\r\n        this.handleRemove = this.handleRemove.bind(this)\r\n    }\r\n    handleRemove(e) {\r\n        e.preventDefault();\r\n        this.props.onRemove(this.props.index);\r\n    }\r\n    componentDidMount() {\r\n        this.setState({index:this.props.index})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-4\">\r\n                <div className=\"card mt-4\">\r\n                    <div className=\"card-header\">\r\n                        <h3>{this.props.todo.title}</h3>\r\n                        <span className=\"badge badgepill badge-danger ml-2\">{this.props.todo.priority}</span>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p>{this.props.todo.description}</p>\r\n                        <p>\r\n                            <mark>{this.props.todo.responsible}</mark>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        <button className=\"btn btn-danger\" onClick={this.handleRemove}>\r\n                            delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\n\r\nimport './App.css';\r\nimport TodoForm from './components/TodoForm';\r\nimport Todo from './components/Todo'\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todos: []\r\n    }\r\n    this.handleAddToDo = this.handleAddToDo.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n  }\r\n\r\n  handleAddToDo(todo) {\r\n    const listToDo = this.state.todos.concat(todo)\r\n    this.setState({\r\n      todos: listToDo\r\n    })\r\n  }\r\n  \r\n  handleRemove(index) {\r\n    this.setState({\r\n      todos:this.state.todos.filter((e,i)=>{\r\n        return i!==index  \r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const todos = this.state.todos.map((todo, i) => {\r\n      return (\r\n        <Todo todo={todo}  key={i} index={i} onRemove={this.handleRemove} />\r\n      ) \r\n    })\r\n    return (\r\n      <div className=\"App\">\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n          <a href=\"#\" className=\"text-white \">tasks\r\n            {this.state.todos && (\r\n              <span className=\"badge badge-pill badge-light ml-2\">{this.state.todos.length}</span>\r\n            )}\r\n          </a>\r\n\r\n        </nav>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 text-center\">\r\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n              <TodoForm onAddToDo={this.handleAddToDo}></TodoForm>\r\n            </div>\r\n            {this.state.todos && todos}\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}